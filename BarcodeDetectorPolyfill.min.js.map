{
  "version": 3,
  "sources": ["node_modules/zbar.wasm/src/CppObject.ts", "node_modules/zbar.wasm/src/enum.ts", "node_modules/zbar.wasm/src/Symbol.ts", "node_modules/zbar.wasm/src/load-browser.ts", "node_modules/zbar.wasm/src/instance.ts", "node_modules/zbar.wasm/src/Image.ts", "node_modules/zbar.wasm/src/ImageScanner.ts", "node_modules/zbar.wasm/src/module.ts", "node_modules/zbar.wasm/src/index.ts", "BarcodeDetectorPolyfill.js"],
  "sourcesContent": [null, null, null, null, null, null, null, null, null, "import { scanImageData } from \"zbar.wasm\";\r\n\r\nconst SUPPORTED_FORMATS_MAP = {\r\n  ZBAR_EAN2: \"ean_2\",\r\n  ZBAR_EAN5: \"ean_5\",\r\n  ZBAR_EAN8: \"ean_8\",\r\n  ZBAR_UPCE: \"upc_e\",\r\n  ZBAR_ISBN10: \"isbn_10\",\r\n  ZBAR_UPCA: \"upc_a\",\r\n  ZBAR_EAN13: \"ean_13\",\r\n  ZBAR_ISBN13: \"isbn_13\",\r\n  ZBAR_COMPOSITE: \"composite\",\r\n  ZBAR_I25: \"itf\",\r\n  ZBAR_DATABAR: \"databar\",\r\n  ZBAR_DATABAR_EXP: \"databar_exp\",\r\n  ZBAR_CODABAR: \"codabar\",\r\n  ZBAR_CODE39: \"code_39\",\r\n  ZBAR_CODE93: \"code_93\",\r\n  ZBAR_CODE128: \"code_128\",\r\n  ZBAR_PDF417: \"pdf417\",\r\n  ZBAR_QRCODE: \"qr_code\",\r\n  ZBAR_SQCODE: \"sq_code\",\r\n};\r\nconst CANVAS_SIZE = 480;\r\n\r\n/**\r\n * Other demos\r\n * https://zbar-wasm.github.io/demo/\r\n *\r\n * Api ref\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Barcode_Detection_API\r\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\r\n *\r\n * Scanner app\r\n * https://github.com/mebjas/html5-qrcode\r\n * https://github.com/maslick/koder\r\n *\r\n * Zbar\r\n * https://github.com/samsam2310/zbar.wasm\r\n * https://github.com/mchehab/zbar\r\n *\r\n * Zxing\r\n * https://github.com/zxing-js/browser\r\n *\r\n * Other libs\r\n * https://www.npmjs.com/package/qr-scanner (worker support)\r\n * https://serratus.github.io/quaggaJS/ (nice rotation algo)\r\n * https://github.com/ericblade/quagga2\r\n * \r\n * Other polyfills\r\n * https://github.com/giladaya/barcode-detector-polyfill\r\n * https://github.com/gruhn/barcode-detector\r\n */\r\nclass BarcodeDetectorPolyfill {\r\n  constructor(options = {}) {\r\n    this.canvas = document.createElement(\"canvas\");\r\n    this.canvas.width = CANVAS_SIZE;\r\n    this.canvas.height = CANVAS_SIZE;\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    this.formats = options.formats ?? Object.values(SUPPORTED_FORMATS_MAP);\r\n  }\r\n\r\n  /**\r\n   * Returns a Promise which fulfills with an Array of supported barcode format types.\r\n   * @returns {Promise}\r\n   */\r\n  static getSupportedFormats() {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(Object.values(SUPPORTED_FORMATS_MAP));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns a Promise which fulfills with an array of detectedBarcode objects with the following properties:\r\n   * - boundingBox: A DOMRectReadOnly, which returns the dimensions of a rectangle representing the extent\r\n   *   of a detected barcode, aligned with the image.\r\n   * - cornerPoints: The x and y co-ordinates of the four corner points of the detected barcode relative\r\n   *   to the image, starting with the top left and working clockwise. This may not be square due\r\n   *   to perspective distortions within the image.\r\n   * - format: The detected barcode format. (For a full list of formats see the [landing page])\r\n   * - rawValue: A String decoded from the barcode data.\r\n   * @param {ImageBitmapSource} image This can be an element, a Blob of type image or an ImageData object.\r\n   * @returns {Promise}\r\n   */\r\n  detect(image) {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (!image.width || !image.height) {\r\n        reject(\"No width or height\");\r\n        return;\r\n      }\r\n\r\n      // Use full area to scan\r\n      if (this.canvas.width != image.width || this.canvas.height != image.height) {\r\n        this.canvas.width = image.width;\r\n        this.canvas.height = image.height;\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n      }\r\n\r\n      this.ctx.drawImage(image, 0, 0, this.canvas.width, this.canvas.height);\r\n      let imageData = this.ctx.getImageData(0, 0, image.width, image.height);\r\n\r\n      // Convert to grayscale\r\n      let pixels = imageData.data;\r\n      for (let i = 0; i < pixels.length; i += 4) {\r\n        let lightness = parseInt((pixels[i] + pixels[i + 1] + pixels[i + 2]) / 3);\r\n\r\n        pixels[i] = lightness;\r\n        pixels[i + 1] = lightness;\r\n        pixels[i + 2] = lightness;\r\n      }\r\n      this.ctx.putImageData(imageData, 0, 0);\r\n      imageData = this.ctx.getImageData(0, 0, image.width, image.height);\r\n\r\n      const zbarResults = await scanImageData(imageData);\r\n\r\n      // Convert zbar data to match expected results\r\n      const results = zbarResults\r\n        .filter((res) => {\r\n          // Make sure we have a bounding box\r\n          if (res.points.length < 2) {\r\n            return false;\r\n          }\r\n          // Make sure it's a supported format\r\n          if (!this.formats.includes(SUPPORTED_FORMATS_MAP[res.typeName])) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n        .map((res) => {\r\n          const nativeFormat = SUPPORTED_FORMATS_MAP[res.typeName];\r\n\r\n          /* Sample barcode result. Points are a variable array of elements and can contain many items.\r\n        d {type: 25, typeName: 'ZBAR_I25', data: Int8Array(12), points: Array(1), time: 1278481950, \u2026}\r\ncacheCount: 0\r\ndata: Int8Array(12) [49, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, buffer: ArrayBuffer(12), byteLength: 12, byteOffset: 0, length: 12]\r\npoints: [0:\r\nx: 384\r\ny: 328]\r\nquality: 1\r\ntime: 1278481950\r\ntype: 25\r\ntypeName: \"ZBAR_I25\"\r\n*/\r\n\r\n          let topLeft = null;\r\n          let topRight = null;\r\n          let bottomRight = null;\r\n          let bottomLeft = null;\r\n          res.points.forEach((point) => {\r\n            if (!topLeft || (point.x < topLeft.x && point.y < topLeft.y)) {\r\n              topLeft = point;\r\n            }\r\n            if (!topRight || (point.x > topLeft.x && point.y < topLeft.y)) {\r\n              topRight = point;\r\n            }\r\n            if (!bottomRight || (point.x > topLeft.x && point.y > topLeft.y)) {\r\n              bottomRight = point;\r\n            }\r\n            if (!bottomLeft || (point.x < topLeft.x && point.y > topLeft.y)) {\r\n              bottomLeft = point;\r\n            }\r\n          });\r\n\r\n          return {\r\n            boundingBox: DOMRectReadOnly.fromRect({\r\n              x: topLeft.x,\r\n              y: topLeft.y,\r\n              width: Math.max(topRight.x, bottomRight.x) - Math.min(topLeft.x, bottomLeft.x),\r\n              height: Math.max(topRight.y, bottomRight.y) - Math.min(topLeft.y, bottomLeft.y),\r\n            }),\r\n            cornerPoints: [topLeft, topRight, bottomRight, bottomLeft],\r\n            format: nativeFormat,\r\n            rawValue: res.decode(),\r\n          };\r\n        });\r\n      resolve(results);\r\n    });\r\n  }\r\n\r\n  // Additional helpers below, not part of the actual interface\r\n\r\n  /**\r\n   * Basically, it's only supported on mobile android (2021)\r\n   * @returns {bool}\r\n   */\r\n  static checkBarcodeDetectorSupport() {\r\n    if (!(\"BarcodeDetector\" in window)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @returns {bool}\r\n   */\r\n  static checkWebcamSupport() {\r\n    if (navigator.mediaDevices && !!navigator.mediaDevices.enumerateDevices) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static setupPolyfill() {\r\n    if (BarcodeDetectorPolyfill.checkBarcodeDetectorSupport()) {\r\n      return;\r\n    }\r\n    window[\"BarcodeDetector\"] = BarcodeDetectorPolyfill;\r\n  }\r\n}\r\n\r\nexport default BarcodeDetectorPolyfill;\r\n"],
  "mappings": "8rBAEA,WAAsB,CAIpB,YAAsB,EAAa,EAAU,CAC3C,KAAK,IAAM,EACX,KAAK,KAAO,EAGJ,YAAU,CAClB,GAAI,MAAK,IACT,KAAM,OAAM,wBAGd,YAAU,CACR,YAAK,aACE,KAAK,MAhBhB,EAAA,UAAA,uHCFA,GAAY,IAAZ,AAAA,UAAY,EAAc,CACxB,EAAA,EAAA,UAAA,GAAA,YACA,EAAA,EAAA,aAAA,GAAA,eACA,EAAA,EAAA,UAAA,GAAA,YACA,EAAA,EAAA,UAAA,GAAA,YACA,EAAA,EAAA,YAAA,IAAA,cACA,EAAA,EAAA,UAAA,IAAA,YACA,EAAA,EAAA,WAAA,IAAA,aACA,EAAA,EAAA,YAAA,IAAA,cACA,EAAA,EAAA,SAAA,IAAA,WACA,EAAA,EAAA,YAAA,IAAA,cACA,EAAA,EAAA,YAAA,IAAA,cACA,EAAA,EAAA,YAAA,IAAA,cACA,EAAA,EAAA,aAAA,KAAA,eACA,EAAA,EAAA,YAAA,KAAA,cACA,EAAA,EAAA,YAAA,KAAA,cACA,EAAA,EAAA,YAAA,MAAA,cACA,EAAA,EAAA,WAAA,MAAA,eAjBU,GAAA,EAAA,gBAAA,GAAA,eAAc,KAoB1B,GAAY,IAAZ,AAAA,UAAY,EAAc,CACxB,EAAA,EAAA,gBAAA,GAAA,kBACA,EAAA,EAAA,mBAAA,GAAA,qBACA,EAAA,EAAA,oBAAA,GAAA,sBACA,EAAA,EAAA,eAAA,GAAA,iBACA,EAAA,EAAA,aAAA,GAAA,eAEA,EAAA,EAAA,iBAAA,IAAA,mBACA,EAAA,EAAA,iBAAA,IAAA,mBAEA,EAAA,EAAA,qBAAA,IAAA,uBAEA,EAAA,EAAA,kBAAA,KAAA,oBAEA,EAAA,EAAA,mBAAA,KAAA,qBACA,EAAA,EAAA,mBAAA,KAAA,uBAfU,GAAA,EAAA,gBAAA,GAAA,eAAc,iGCnB1B,GAAA,IAAA,IAOA,OAAiB,CAOf,YAAY,EAAa,EAAgB,CACvC,KAAK,IAAM,EACX,KAAK,MAAQ,GAAO,EACpB,KAAK,IAAM,EACX,KAAK,MAAQ,GAAI,WAAU,GAC3B,KAAK,QAAU,GAAI,aAAY,GAC/B,KAAK,OAAS,GAAI,YAAW,KAIjC,eAAwB,EAAW,IAC7B,OAAI,CACN,MAAO,MAAK,QAAQ,KAAK,UAGvB,OAAI,CACN,GAAM,GAAM,KAAK,QAAQ,KAAK,MAAQ,GAChC,EAAM,KAAK,QAAQ,KAAK,MAAQ,GACtC,MAAO,WAAU,KAAK,KAAK,MAAM,SAAS,EAAK,EAAM,OAGnD,SAAM,CACR,GAAM,GAAM,KAAK,QAAQ,KAAK,MAAQ,GAEhC,EAAQ,AADF,KAAK,QAAQ,KAAK,MAAQ,IACjB,EACf,EAAM,GACZ,OAAS,GAAI,EAAG,EAAI,EAAK,EAAE,EAAG,CAC5B,GAAM,GAAI,KAAK,OAAO,EAAQ,EAAI,GAC5B,EAAI,KAAK,OAAO,EAAQ,EAAI,EAAI,GACtC,EAAI,KAAK,CAAE,IAAG,MAEhB,MAAO,MAGL,OAAI,CACN,GAAM,GAAM,KAAK,QAAQ,KAAK,MAAQ,GACtC,MAAK,GACE,GAAI,GAAU,EAAK,KAAK,KADd,QAIf,OAAI,CACN,MAAO,MAAK,QAAQ,KAAK,MAAQ,OAG/B,aAAU,CACZ,MAAO,MAAK,OAAO,KAAK,MAAQ,OAG9B,UAAO,CACT,MAAO,MAAK,OAAO,KAAK,MAAQ,MAIpC,eAA2B,EAAW,IAChC,OAAI,CACN,GAAM,GAAM,KAAK,QAAQ,KAAK,MAAQ,GACtC,MAAK,GACE,GAAI,GAAU,EAAK,KAAK,KADd,OAKrB,OAAmB,CASjB,YAAoB,EAAc,CAChC,KAAK,KAAO,EAAI,KAChB,KAAK,SAAW,GAAA,eAAe,KAAK,MACpC,KAAK,KAAO,EAAI,KAChB,KAAK,OAAS,EAAI,OAClB,KAAK,KAAO,EAAI,KAChB,KAAK,WAAa,EAAI,WACtB,KAAK,QAAU,EAAI,cAGd,sBAAqB,EAAa,EAAgB,CACvD,GAAI,GAAO,EAAG,MAAO,GAGrB,GAAI,GAAS,AADD,GAAI,GAAa,EAAK,GACjB,KACX,EAAM,GACZ,KAAO,IAAW,MAChB,EAAI,KAAK,GAAI,GAAO,IACpB,EAAS,EAAO,KAElB,MAAO,GAGT,OAAO,EAAiB,CAEtB,MAAO,AADS,IAAI,aAAY,GACjB,OAAO,KAAK,QAlC/B,EAAA,OAAA,iPCrEA,GAAA,GAAA,GAAA,KAEa,EAAA,iBAAmB,KAC9B,IACwC,CAWxC,GAAM,GAAM,KAAM,OAAM,EAAA,SACxB,GAAI,CAAC,EAAI,GACP,eAAQ,MAAM,sCAAwC,EAAA,SAC/C,KAET,GAAM,GAAS,KAAM,GAAI,cAEzB,MAAO,AADQ,MAAM,aAAY,YAAY,EAAQ,IACvC,oIC7BhB,GAAA,IAAA,IAGI,EAAoB,KACpB,EAAS,GAAI,YAEX,GAAgB,CAAC,EAAgB,IAAsB,CAC3D,GAAM,GAAM,KAAK,MACjB,SAAO,GAAM,GAAM,EAAM,IAAO,EAChC,EAAQ,EAAK,GAAM,GAAO,EAAM,IAAO,IAAM,IAAO,EAC7C,GAGL,EAAoB,EAClB,EAAkC,AAAC,GAAe,CACtD,AAAI,GACF,QAAQ,KAAK,2BAA4B,EAAM,OAAO,OAAO,YAE/D,EAAoB,KAAK,MACzB,EAAS,GAAI,YAAW,EAAM,OAAO,SAGjC,GAAY,CAChB,IAAK,CACH,iBACA,oCAIA,GAAe,UAAW,CAC5B,GAAM,GAAM,KAAM,IAAA,iBAAiB,IACnC,GAAI,CAAC,EACH,KAAM,OAAM,uBAEd,SAAO,EAAI,QACX,EAAgC,GACzB,MAGI,EAAA,YAAc,SAClB,KAAM,IAGF,EAAA,uBAAyB,IAC7B,6FC5CT,GAAA,IAAA,IACA,GAAA,IACA,EAAA,IAEA,eAA2B,IAAA,SAAS,aACrB,sBACX,EACA,EACA,EACA,EAAuB,EAAC,CAExB,GAAM,GAAO,KAAM,GAAA,cACb,EAAO,GAAI,YAAW,EAAK,OAAO,QAClC,EAAO,GAAI,YAAW,GACtB,EAAM,EAAQ,EACpB,GAAI,IAAQ,EAAK,WACf,KAAM,OAAM,2CAEd,GAAM,GAAM,EAAK,OAAO,GACxB,EAAK,IAAI,EAAM,GACf,GAAM,GAAM,EAAK,aACf,EACA,EACA,UACA,EACA,EACA,GAEF,MAAO,IAAI,MAAK,EAAK,eAGV,sBACX,EACA,EACA,EACA,EAAuB,EAAC,CAExB,GAAM,GAAO,KAAM,GAAA,cACb,EAAO,GAAI,YAAW,EAAK,OAAO,QAClC,EAAO,GAAI,YAAW,GACtB,EAAM,EAAQ,EACpB,GAAI,EAAM,IAAM,EAAK,WACnB,KAAM,OAAM,2CAEd,GAAM,GAAM,EAAK,OAAO,GACxB,OAAS,GAAI,EAAG,EAAI,EAAK,EAAE,EAAG,CAC5B,GAAM,GAAI,EAAK,EAAI,GACb,EAAI,EAAK,EAAI,EAAI,GACjB,EAAI,EAAK,EAAI,EAAI,GACvB,EAAK,EAAM,GAAM,EAAI,MAAQ,EAAI,MAAQ,EAAI,MAAS,GAExD,GAAM,GAAM,EAAK,aACf,EACA,EACA,UACA,EACA,EACA,GAEF,MAAO,IAAI,MAAK,EAAK,GAGvB,SAAO,CACL,KAAK,aACL,KAAK,KAAK,cAAc,KAAK,KAC7B,KAAK,IAAM,EAGb,YAAU,CACR,KAAK,aACL,GAAM,GAAM,KAAK,KAAK,kBAAkB,KAAK,KAC7C,MAAO,IAAA,OAAO,qBAAqB,EAAK,KAAK,KAAK,OAAO,UAnE7D,EAAA,MAAA,oGCJA,GAAA,IAAA,IAEA,GAAA,IACA,GAAA,IAGA,eAAkC,IAAA,SAAS,aAC5B,SAAM,CACjB,GAAM,GAAO,KAAM,IAAA,cACb,EAAM,EAAK,sBACjB,MAAO,IAAI,MAAK,EAAK,GAGvB,SAAO,CACL,KAAK,aACL,KAAK,KAAK,qBAAqB,KAAK,KACpC,KAAK,IAAM,EAGb,UAAU,EAAqB,EAAsB,EAAa,CAChE,YAAK,aACE,KAAK,KAAK,wBAAwB,KAAK,IAAK,EAAK,EAAM,GAGhE,YAAY,EAAkB,GAAI,CAChC,KAAK,aACL,KAAK,KAAK,0BAA0B,KAAK,IAAK,GAGhD,aAAa,EAAY,CACvB,KAAK,aACL,KAAK,KAAK,2BAA2B,KAAK,IAAK,EAAM,cAGvD,YAAU,CACR,KAAK,aACL,GAAM,GAAM,KAAK,KAAK,yBAAyB,KAAK,KACpD,MAAO,IAAA,OAAO,qBAAqB,EAAK,KAAK,KAAK,OAAO,QAG3D,KAAK,EAAY,CACf,YAAK,aACE,KAAK,KAAK,kBAAkB,KAAK,IAAK,EAAM,gBApCvD,EAAA,aAAA,2JCNA,GAAA,GAAA,IACA,GAAA,IAGM,EAAwB,GAAA,aAAa,SAC9B,EAAA,kBAAoB,SACxB,KAAM,GAGf,GAAM,GAAY,MAChB,EACA,IAC0B,CAC1B,AAAI,IAAY,QACd,GAAU,KAAM,IAElB,GAAM,GAAM,EAAQ,KAAK,GACzB,GAAI,EAAM,EACR,KAAM,OAAM,eAEd,MAAI,KAAQ,EAAU,GACf,EAAM,cAGF,EAAA,eAAiB,MAC5B,EACA,EACA,EACA,IAC0B,CAC1B,GAAM,GAAQ,KAAM,GAAA,MAAM,qBAAqB,EAAO,EAAQ,GACxD,EAAM,KAAM,GAAU,EAAO,GACnC,SAAM,UACC,GAGI,EAAA,eAAiB,MAC5B,EACA,EACA,EACA,IAC0B,CAC1B,GAAM,GAAQ,KAAM,GAAA,MAAM,qBAAqB,EAAO,EAAQ,GACxD,EAAM,KAAM,GAAU,EAAO,GACnC,SAAM,UACC,GAGI,EAAA,cAAgB,MAC3B,EACA,IAEO,KAAM,GAAA,eACX,EAAM,KAAK,OACX,EAAM,MACN,EAAM,OACN,0XCxDJ,EAAA,IAAA,GACA,EAAA,IAAA,GACA,EAAA,IAAA,GACA,EAAA,IAAA,KCHA,OAA8B,SAExB,EAAwB,CAC5B,UAAW,QACX,UAAW,QACX,UAAW,QACX,UAAW,QACX,YAAa,UACb,UAAW,QACX,WAAY,SACZ,YAAa,UACb,eAAgB,YAChB,SAAU,MACV,aAAc,UACd,iBAAkB,cAClB,aAAc,UACd,YAAa,UACb,YAAa,UACb,aAAc,WACd,YAAa,SACb,YAAa,UACb,YAAa,WAET,GAAc,IA8BpB,OAA8B,CAC5B,YAAY,EAAU,GAAI,CACxB,KAAK,OAAS,SAAS,cAAc,UACrC,KAAK,OAAO,MAAQ,GACpB,KAAK,OAAO,OAAS,GACrB,KAAK,IAAM,KAAK,OAAO,WAAW,MAClC,KAAK,QAAU,EAAQ,SAAW,OAAO,OAAO,SAO3C,sBAAsB,CAC3B,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,EAAQ,OAAO,OAAO,MAgB1B,OAAO,EAAO,CACZ,MAAO,IAAI,SAAQ,MAAO,EAAS,IAAW,CAC5C,GAAI,CAAC,EAAM,OAAS,CAAC,EAAM,OAAQ,CACjC,EAAO,sBACP,OAIF,AAAI,MAAK,OAAO,OAAS,EAAM,OAAS,KAAK,OAAO,QAAU,EAAM,SAClE,MAAK,OAAO,MAAQ,EAAM,MAC1B,KAAK,OAAO,OAAS,EAAM,OAC3B,KAAK,IAAM,KAAK,OAAO,WAAW,OAGpC,KAAK,IAAI,UAAU,EAAO,EAAG,EAAG,KAAK,OAAO,MAAO,KAAK,OAAO,QAC/D,GAAI,GAAY,KAAK,IAAI,aAAa,EAAG,EAAG,EAAM,MAAO,EAAM,QAG3D,EAAS,EAAU,KACvB,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,GAAK,EAAG,CACzC,GAAI,GAAY,SAAU,GAAO,GAAK,EAAO,EAAI,GAAK,EAAO,EAAI,IAAM,GAEvE,EAAO,GAAK,EACZ,EAAO,EAAI,GAAK,EAChB,EAAO,EAAI,GAAK,EAElB,KAAK,IAAI,aAAa,EAAW,EAAG,GACpC,EAAY,KAAK,IAAI,aAAa,EAAG,EAAG,EAAM,MAAO,EAAM,QAK3D,GAAM,GAAU,AAHI,MAAM,qBAAc,IAIrC,OAAO,AAAC,GAEH,IAAI,OAAO,OAAS,GAIpB,CAAC,KAAK,QAAQ,SAAS,EAAsB,EAAI,aAKtD,IAAI,AAAC,GAAQ,CACZ,GAAM,GAAe,EAAsB,EAAI,UAe3C,EAAU,KACV,EAAW,KACX,EAAc,KACd,EAAa,KACjB,SAAI,OAAO,QAAQ,AAAC,GAAU,CAC5B,AAAI,EAAC,GAAY,EAAM,EAAI,EAAQ,GAAK,EAAM,EAAI,EAAQ,IACxD,GAAU,GAER,EAAC,GAAa,EAAM,EAAI,EAAQ,GAAK,EAAM,EAAI,EAAQ,IACzD,GAAW,GAET,EAAC,GAAgB,EAAM,EAAI,EAAQ,GAAK,EAAM,EAAI,EAAQ,IAC5D,GAAc,GAEZ,EAAC,GAAe,EAAM,EAAI,EAAQ,GAAK,EAAM,EAAI,EAAQ,IAC3D,GAAa,KAIV,CACL,YAAa,gBAAgB,SAAS,CACpC,EAAG,EAAQ,EACX,EAAG,EAAQ,EACX,MAAO,KAAK,IAAI,EAAS,EAAG,EAAY,GAAK,KAAK,IAAI,EAAQ,EAAG,EAAW,GAC5E,OAAQ,KAAK,IAAI,EAAS,EAAG,EAAY,GAAK,KAAK,IAAI,EAAQ,EAAG,EAAW,KAE/E,aAAc,CAAC,EAAS,EAAU,EAAa,GAC/C,OAAQ,EACR,SAAU,EAAI,YAGpB,EAAQ,WAUL,8BAA8B,CACnC,MAAM,mBAAqB,cAStB,qBAAqB,CAC1B,MAAI,aAAU,cAAgB,CAAC,CAAC,UAAU,aAAa,wBAMlD,gBAAgB,CACrB,AAAI,EAAwB,+BAG5B,QAAO,gBAAqB,KAIzB,GAAQ",
  "names": []
}
